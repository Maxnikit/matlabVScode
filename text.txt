% Вычисление круглости для каждого красного объекта
properties = regionprops(L, 'Eccentricity', 'Centroid', 'Area', 'Perimeter');
circleObjects = false(size(redMaskCleaned));
circleIndices = [];
circleLabels = {};

% Предполагаем, что круг имеет эксцентриситет, близкий к нулю, и круглость, близкую к 1
for k = 1:length(properties)
    eccentricity = properties(k).Eccentricity;
    area = properties(k).Area;
    perimeter = properties(k).Perimeter;
    circularity = (perimeter^2) / (4*pi*area); % Вычисление круглости
    if eccentricity < 0.2 && circularity < 1.1
        circleIndices = [circleIndices, k];
        circleObjects = circleObjects | (L == k);
        circleLabels{end+1} = sprintf('Object %d', k); % Создание подписи для каждого круглого объекта
    end
end

% Отображение изображения с выделенными круглыми объектами и их подписями
imshow(originalImage);
hold on;
for idx = 1:length(circleIndices)
    k = circleIndices(idx);
    boundary = B{k};
    plot(boundary(:,2), boundary(:,1), 'b', 'LineWidth', 2); % Рисуем границы синим цветом
    text(properties(k).Centroid(1), properties(k).Centroid(2), circleLabels{idx}, ...
        'Color', 'y', 'FontSize', 10, 'FontWeight', 'bold'); % Подписываем объекты
end
hold off;
title('Круглые объекты красного цвета');

disp(num2str(numDiamonds));
% Удаление кругов из ромбов
diamondObjects = diamondObjects & ~circleObjects;

% Отображение изображения с выделенными ромбами, исключая круги
imshow(originalImage);
hold on;
[L, num] = bwlabel(diamondObjects);
B = bwboundaries(diamondObjects);
for k = 1:num
    boundary = B{k};
    if ~any(ismember(k, circleIndices))
        plot(boundary(:,2), boundary(:,1), 'g', 'LineWidth', 2); % Рисуем границы зеленым цветом
    end
end
hold off;
title('Объекты с формой ромба без кругов');
% Подсчет количества фигур с формой ромба, исключая круги
numDiamonds = sum(~ismember(1:num, circleIndices));
disp(['Количество фигур с формой ромба: ' num2str(numDiamonds)]);
